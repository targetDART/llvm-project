stages:          # List of stages for jobs, and their order of execution
  - build
  - compile
  - deploy


.base:
  tags: ["hpc"]
  id_tokens:
    HPC_CI_TOKEN:
      aud: aixCIlenz
  before_script:
    - ml purge
    - ml GCCcore binutils hwloc libxml2 ncurses GMP Z3 libffi elfutils CUDA Ninja gompi

.exec:
  extends: .base
  before_script:
    - ml purge
    - ml GCCcore binutils hwloc libxml2 ncurses GMP Z3 libffi elfutils CUDA gompi
    - export PATH=$PATH:$PWD/software/bin
    - export PATH=$PATH:$PWD/software/llvm/16/bin
    - export LIBRARY_PATH=$PWD/software/llvm/16/lib:$LIBRARY_PATH
    - export LD_LIBRARY_PATH=$PWD/software/llvm/16/lib:$LD_LIBRARY_PATH
    - export PSM2_CUDA=1


build-job:       # This job runs in the build stage, which runs first.
  extends: .base
  stage: build
  variables:
    SLURM_PARAM_CORES: "-c 48"
    SLURM_PARAM_TIME:  "-t 2:00:00"
    SLURM_PARAM_ACCOUNT: "-A rwth1270"
  script:
    - export SOURCES=$PWD/llvm
    - mkdir -p $TMP/build-llvm
    - cd $TMP/build-llvm
    - | 
      if [[ ! -f "CMakeCache.txt" ]]; then
        cmake -G Ninja $SOURCES \
           -DCMAKE_BUILD_TYPE=Release\
           -DLLVM_ENABLE_PROJECTS='clang;clang-tools-extra;openmp;lldb;' \
           -DLLVM_ENABLE_RUNTIMES='compiler-rt;libcxx;libcxxabi' \
           -DGCC_INSTALL_PREFIX=$GCCcore_ROOT \
           -DCMAKE_INSTALL_PREFIX=$TMP/software/llvm/16 \
           -DLLVM_INSTALL_UTILS=ON \
           -DCMAKE_CXX_COMPILER='mpicxx' \
           -DCLANG_OPENMP_NVPTX_DEFAULT_ARCH=sm_60 \
           -DLIBOMPTARGET_NVPTX_COMPUTE_CAPABILITIES=35,60,70 \
           -DCMAKE_CXX_FLAGS='-g'
       fi
    - ninja -j48 install
    - cd -
    - tar -cvzf targetDART.tar.gz $TMP/software 
  artifacts:
    paths:
      - targetDART.tar.gz

compile-helloworld-job:
  extends: .exec
  stage: compile
  dependencies: [build-job]
  script:
    - tar -zvf targetDART.tar.gz
    - mkdir software/bin
    - echo '#!/bin/bash\n\nclang++ -L$WORK/software/llvm/16/lib -I$WORK/software/llvm/16/lib/clang/16/include/ -fopenmp -fopenmp-targets=nvptx64-nvidia-cuda -Xopenmp-target -march=sm_70 $@' > software/bin/clangwrap
    - clangwrap apps/simple_examples/00notquitehelloworld.cpp -o 00notquitehelloworld.exe  
  artifacts:
    paths:
      - 00notquitehelloworld.exe
