stages:          # List of stages for jobs, and their order of execution
  - build
  - compile
  - run
  - deploy
  

variables: 
  SLURM_PARAM_ACCOUNT: "-A rwth1270"
  SLURM_DPARAM_ACCOUNT: "-A rwth1270"
  SLURM_DPARAM_TIME:  "-t 2:00:00"
  SLURM_PARAM_EXCLUSIVE: "--exclusive"
  DIR: "/dev/shm"

.base:
  tags: ["hpc"]
  id_tokens:
    HPC_CI_TOKEN:
      aud: aixCIlenz
  before_script:
    - ml purge
    - ml GCCcore binutils hwloc libxml2 ncurses GMP Z3 libffi elfutils CUDA Ninja intel GCC
    - export PATH=$PATH:$PWD/software/bin
    - export LIBRARY_PATH=$PWD/software/lib:$LIBRARY_PATH
    - export LD_LIBRARY_PATH=$PWD/software/lib:$LD_LIBRARY_PATH
    - export PSM2_CUDA=1
    - export I_MPI_CXX=g++
    - export I_MPI_CC=gcc

.exec:
  extends: .base
  variables:
    SLURM_PARAM_GPUS: "--gres=gpu:volta:2"

.compile:
  extends: .base


build-job:       # This job runs in the build stage, which runs first.
  extends: .base
  stage: build
  variables:
    SLURM_PARAM_CORES: "-c 48"
    SLURM_PARAM_EXCLUSIVE: "--exclusive"
    SLURM_PARAM_TIME:  "-t 2:00:00"
    GIT_DEPTH: "1"
  script:
    - echo $PWD
    - ls -la $PWD/
    - export SOURCES=$PWD/llvm
    - mkdir -p $DIR/build-llvm
    - cd $DIR/build-llvm
    - | 
      if [[ ! -f "CMakeCache.txt" ]]; then
        cmake -G Ninja $SOURCES \
            -DCMAKE_BUILD_TYPE=Release\
            -DLLVM_ENABLE_PROJECTS='clang;clang-tools-extra;openmp;lldb;' \
            -DLLVM_ENABLE_RUNTIMES='compiler-rt;libcxx;libcxxabi;libunwind' \
            -DCMAKE_INSTALL_PREFIX=$CI_PROJECT_DIR/software/llvm/16 \
            -DLLVM_INSTALL_UTILS=ON \
            -DCMAKE_CXX_COMPILER='mpicxx' \
            -DCMAKE_C_COMPILER='mpicc' \
            -DCLANG_OPENMP_NVPTX_DEFAULT_ARCH=sm_90 \
            -DLIBOMPTARGET_NVPTX_COMPUTE_CAPABILITIES=35,60,70,90 \
            -DCMAKE_CXX_FLAGS='-std=c++20' 
      fi
    - ninja -j48 install
    - cd -
    - mkdir -p software/bin
    - echo -e '#!/bin/bash\n\n' "$PWD/software/llvm/16/bin/clang++ -L$PWD/software/llvm/16/lib/libomptarget.so.16 -I$PWD/softwarellvm/16/include/ -fopenmp -fopenmp-targets=nvptx64-nvidia-cuda -Xopenmp-target=nvptx64-nvidia-cuda -march=sm_70" '$@' > software/bin/clangwrap
    - chmod +x software/bin/clangwrap
    - ls -la software/bin
    - cat software/bin/clangwrap
    - clangwrap -v
  artifacts:
    paths:
      - ./software/*


compile-helloworld-job:
  extends: .compile
  stage: compile
  dependencies: [build-job]
  variables:
    GIT_STRATEGY: none
  script:
    - git clone https://github.com/targetDART/TargetDART_Applications.git
    - clangwrap -v
    - clangwrap TargetDART_Applications/simple_examples/00notquitehelloworld.cpp -o 00notquitehelloworld.exe  
  artifacts:
    paths:
      - 00notquitehelloworld.exe    

run-helloworld-job:
  extends: .exec
  stage: run
  dependencies: [compile-helloworld-job, build-job]
  variables:
    GIT_STRATEGY: none
    SLURM_PARAM_CORES: "-c 48"
    SLURM_PARAM_TIME:  "-t 2:00:00"
    SLURM_PARAM_ACCOUNT: "-A rwth1270"
    SLURM_PARAM_NODES: "-n 2"
    SLURM_PARAM_GPUS: "--gres=gpu:volta:2"
  script:
    - TD_MANAGEMENT=0,1,2,3 OMP_PLACES="4:44" srun $SLURM_PARAM_GPUS $SLURM_PARAM_CORES $SLURM_PARAM_NODES 00notquitehelloworld.exe
